# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-27 11:01
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressMixin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line1', models.CharField(help_text='Rue, voie, boîte postale, nom de société', max_length=100, verbose_name='Ligne 1')),
                ('line2', models.CharField(blank=True, help_text='Bâtiment, étage, lieu-dit, etc.', max_length=100, verbose_name='Ligne 2')),
                ('post_code', models.CharField(max_length=20, verbose_name='code postal')),
                ('city', models.CharField(max_length=50, verbose_name='ville')),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='nom')),
                ('short_name', models.CharField(max_length=5, verbose_name='nom court')),
            ],
            options={
                'verbose_name': 'filière',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom du pays', max_length=50, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'pays',
                'verbose_name_plural': 'pays',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='internal.Branch', verbose_name='filière')),
            ],
            options={
                'verbose_name': 'classe',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'niveau',
                'verbose_name_plural': 'niveaux',
            },
        ),
        migrations.CreateModel(
            name='TutoringGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'groupe de tutorat',
                'verbose_name_plural': 'groupes de tutorat',
            },
        ),
        migrations.CreateModel(
            name='TutoringMeeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('tutoring_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='internal.TutoringGroup', verbose_name='groupe de tutorat')),
            ],
            options={
                'verbose_name': 'séance de tutorat',
                'verbose_name_plural': 'séances de tutorat',
            },
        ),
        migrations.CreateModel(
            name='HighSchool',
            fields=[
                ('addressmixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='internal.AddressMixin')),
                ('name', models.CharField(help_text='Nom du lycée', max_length=100, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'lycée',
            },
            bases=('internal.addressmixin', models.Model),
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('addressmixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='internal.AddressMixin')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='date de naissance')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='téléphone')),
            ],
            options={
                'verbose_name': 'tuteur',
            },
            bases=('internal.addressmixin', models.Model),
        ),
        migrations.CreateModel(
            name='Tutoree',
            fields=[
                ('addressmixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='internal.AddressMixin')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='date de naissance')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='téléphone')),
            ],
            options={
                'verbose_name': 'tutoré',
            },
            bases=('internal.addressmixin', models.Model),
        ),
        migrations.AddField(
            model_name='grade',
            name='level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='internal.Level', verbose_name='niveau'),
        ),
        migrations.AddField(
            model_name='addressmixin',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='internal.Country', verbose_name='pays'),
        ),
        migrations.AddField(
            model_name='tutoringmeeting',
            name='high_school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='internal.HighSchool', verbose_name='lycée'),
        ),
        migrations.AddField(
            model_name='tutoringgroup',
            name='high_school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='internal.HighSchool', verbose_name='lycée'),
        ),
        migrations.AddField(
            model_name='tutoree',
            name='grade',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='internal.Grade', verbose_name='classe'),
        ),
        migrations.AddField(
            model_name='tutoree',
            name='high_school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='internal.HighSchool', verbose_name='lycée'),
        ),
        migrations.AddField(
            model_name='tutoree',
            name='tutoring_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='internal.TutoringGroup', verbose_name='groupe de tutorat'),
        ),
        migrations.AddField(
            model_name='tutoree',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tutor',
            name='tutoring_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='internal.TutoringGroup', verbose_name='groupe de tutorat'),
        ),
        migrations.AddField(
            model_name='tutor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
